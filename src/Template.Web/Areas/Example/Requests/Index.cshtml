@model Template.Web.Areas.Example.Requests.UserIndexViewModel
<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="utf-8">
    <title>Gestione Team</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <style>
        .fixed-overlay {
            position: fixed;
            top: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 50%;
            background: rgba(255, 255, 255, 0.9);
            padding: 20px;
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
            border-radius: 8px;
            display: none;
            z-index: 999;
        }

        .form-container {
            text-align: center;
        }

        .fixed-overlay.active {
            display: block;
        }
    </style>
</head>
<body>
    <div class="container mt-4" style="padding-left: 200px;">
        <h2>Gestione Team</h2>
        <div class="mb-3">
            <button class="btn btn-primary">Nome team</button>
            <button class="btn btn-secondary">Ricerca</button>
            <button class="btn btn-success" onclick="showTeamForm()">+ Nuovo Team</button>
        </div>
        <div id="teamForm" class="fixed-overlay">
            <div class="form-container">
                <h3>Crea Team</h3>
                <form method="post" asp-action="Edit" asp-controller="Teams" asp-area="Example">
                    @Html.AntiForgeryToken()
                    <div class="mb-3">
                        <label class="form-label" for="teamName">Nome Team</label>
                        <input type="text" class="form-control" id="teamName" name="Name" />
                        <input type="hidden" name="Id" value="" />
                    </div>
                    <button type="submit" class="btn btn-primary">Salva</button>
                    <button type="button" class="btn btn-secondary" onclick="hideTeamForm()">Chiudi</button>
                </form>
            </div>
        </div>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Utente</th>
                    <th>Data richiesta</th>
                    <th>Inizio</th>
                    <th>Fine</th>
                    <th>Tipo evento</th>
                    <th>Stato evento</th>
                    <th>Azioni</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.Absences != null && Model.Absences.Any())
                {
                    foreach (var absence in Model.Absences)
                    {
                        <tr>
                            <td>@absence.FullName</td>
                            <td>@absence.RequestDate.ToString("dd/MM/yyyy")</td>
                            <td>@absence.StartEventDate.ToString("dd/MM/yyyy HH:mm")</td>
                            <td>@absence.EndEventDate.ToString("dd/MM/yyyy  HH:mm")</td>
                            <td>@absence.EventType</td>
                            <td>@absence.EventState</td>
                            <td>
                                <form method="post" asp-action="DeleteAbsence" asp-controller="Requests" asp-area="Example">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="id" value="@absence.Id" />
                                    <button type="submit" class="btn btn-danger btn-sm">Elimina</button>
                                </form>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr><td colspan="7" class="text-center">Nessuna assenza trovata</td></tr>
                }
            </tbody>
        </table>
    </div>
</body>
</html>

<script>
   function deleteTeam(id) {
        if (confirm("Sei sicuro di voler cancellare questo team?")) {
            fetch(`/Example/Teams/Delete`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({ id: id })
            })
            .then(response => {
                if (response.redirected) {
                    window.location.href = response.url;
                } else {
                    alert("Errore nella cancellazione");
                }
            });
        }
    }

    function editTeam(id) {
        alert("Modifica team ID: " + id);
    }
    function showTeamForm() {
        document.getElementById("teamForm").classList.add("active");
    }

    function hideTeamForm() {
        document.getElementById("teamForm").classList.remove("active");
    }

    const weekDays = ["Lunedì", "Martedì", "Mercoledì", "Giovedì", "Venerdì", "Sabato", "Domenica"];
const selectedDays = [];

function showTeamForm() {
    document.getElementById("teamForm").classList.add("active");
}

function hideTeamForm() {
    document.getElementById("teamForm").classList.remove("active");
}

function saveTeam() {
    let name = document.getElementById("teamName").value;

    if (name.length > 0) {
        alert(`Team creato!\nNome: ${name}`);
        hideTeamForm();
    } else {
        alert("Compila tutti i campi!");
    }
}
</script>