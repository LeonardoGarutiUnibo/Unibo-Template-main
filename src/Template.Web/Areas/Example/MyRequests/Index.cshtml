<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="utf-8">
    <title>Gestione Team</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">

    <style>
        .state-pending {
            background-color: orange !Important;
            font-weight: bold;
        }
        .state-rifiutato {
            background-color: red !Important;
            font-weight: bold;
        }
        .state-approvato {
            background-color: green !Important;
            font-weight: bold;
        }
        .fixed-overlay {
            position: fixed;
            top: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 50%;
            background: rgba(255, 255, 255, 0.9);
            padding: 20px;
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
            border-radius: 8px;
            display: none;
            z-index: 999;
        }

        .form-container {
            text-align: center;
        }

        .fixed-overlay.active {
            display: block;
        }
    </style>
</head>
<body>
    <div class="container mt-4" style="padding-left: 200px;">
        <h2>Le mie richieste</h2>
        <table class="table">
            <thead>
                <tr>
                    <th>Data richiesta</th>
                    <th>Inizio</th>
                    <th>Fine</th>
                    <th>Tipo</th>
                    <th>Stato</th>
                    <th>Azioni</th>
                </tr>
            </thead>
            <tbody>
            @foreach (var item in Model.AbsenceEvents)
            {
                string stateClass = item.EventState?.ToLower() switch
                {
                    "pending" => "state-pending",
                    "rifiutato" => "state-rifiutato",
                    "approvato" => "state-approvato",
                    _ => ""
                };
                Console.WriteLine(item.EventState);
                <tr>
                    <td>@item.RequestDate.ToShortDateString()</td>
                    <td>@item.StartEventDate.ToString("dd/MM/yyyy HH:mm")</td>
                    <td>@item.EndEventDate.ToString("dd/MM/yyyy HH:mm")</td>
                    <td>@(item.EventType?.Split(' ')[0])</td>
                    <td class="@stateClass">@item.EventState</td>
                    <td>
                        @if (stateClass == "state-pending")
                        {
                            @Html.AntiForgeryToken()
                            <button class="btn btn-danger btn-sm" onclick="deleteRequest('@item.Id')">Cancella</button>
                        }
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</body>
</html>

<script>
    function deleteRequest(id) {
        if (confirm("Sei sicuro di voler cancellare questa richiesta?")) {
            fetch('/Example/MyRequests/Delete', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({ id: id })
            })
            .then(response => {
                if (response.ok) {
                    alert("Richiesta cancellata con successo!");
                    location.reload();  // ricarica la pagina per aggiornare la tabella
                } else {
                    alert("Errore nella cancellazione della richiesta.");
                }
            });
        }
    }

</script>